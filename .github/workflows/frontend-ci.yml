name: Frontend CI/CD

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Setup NPM authentication
        run: |
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:username=${{ secrets.USERNAME }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:_password=${{ secrets.AZURE_DEVOPS_NPM_TOKEN }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:email=npm@tomtom.com" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:username=${{ secrets.USERNAME }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:_password=${{ secrets.AZURE_DEVOPS_NPM_TOKEN }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:email=npm@tomtom.com" >> ~/.npmrc

      - name: Install dependencies
        run: npm ci --force

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Build application
        env:
          VITE_TOMTOM_API_KEY: ${{ secrets.VITE_TOMTOM_API_KEY }}
        run: npm run build

      - name: Check build output
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ Build failed - dist directory not found"
            exit 1
          fi
          echo "✅ Build successful - dist directory created"
          ls -la dist/

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-files-node-${{ matrix.node-version }}
          path: dist/
          retention-days: 30

  security-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Setup NPM authentication
        run: |
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:username=${{ secrets.USERNAME }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:_password=${{ secrets.AZURE_DEVOPS_NPM_TOKEN }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:email=npm@tomtom.com" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:username=${{ secrets.USERNAME }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:_password=${{ secrets.AZURE_DEVOPS_NPM_TOKEN }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:email=npm@tomtom.com" >> ~/.npmrc

      - name: Install dependencies
        run: npm ci --force

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for outdated packages
        run: npm outdated || true

  deploy-preview:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Setup NPM authentication
        run: |
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:username=${{ secrets.USERNAME }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:_password=${{ secrets.AZURE_DEVOPS_NPM_TOKEN }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:email=npm@tomtom.com" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:username=${{ secrets.USERNAME }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:_password=${{ secrets.AZURE_DEVOPS_NPM_TOKEN }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:email=npm@tomtom.com" >> ~/.npmrc

      - name: Install dependencies
        run: npm ci

      - name: Build for preview
        env:
          VITE_TOMTOM_API_KEY: ${{ secrets.VITE_TOMTOM_API_KEY }}
        run: npm run build

      - name: Deploy to preview environment
        run: |
          echo "🚀 Preview deployment would happen here"
          echo "You can integrate with services like:"
          echo "  - Vercel Preview Deployments"
          echo "  - Netlify Deploy Previews" 
          echo "  - GitHub Pages"
          echo "  - AWS S3 + CloudFront"

  deploy-production:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Setup NPM authentication
        run: |
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:username=${{ secrets.USERNAME }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:_password=${{ secrets.AZURE_DEVOPS_NPM_TOKEN }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/registry/:email=npm@tomtom.com" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:username=${{ secrets.USERNAME }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:_password=${{ secrets.AZURE_DEVOPS_NPM_TOKEN }}" >> ~/.npmrc
          echo "//pkgs.dev.azure.com/tomtomweb/${{ secrets.UUID }}/_packaging/TTI-FE/npm/:email=npm@tomtom.com" >> ~/.npmrc

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        env:
          VITE_TOMTOM_API_KEY: ${{ secrets.VITE_TOMTOM_API_KEY }}
          NODE_ENV: production
        run: npm run build

      - name: Deploy to production
        run: |
          echo "🚀 Production deployment would happen here"
          echo "You can integrate with services like:"
          echo "  - Vercel"
          echo "  - Netlify" 
          echo "  - AWS S3 + CloudFront"
          echo "  - Azure Static Web Apps"
